QUnit.test('components/client-report.js', function(assert) {
  assert.expect(1);
  assert.ok(false, 'components/client-report.js should pass ESLint\n\n4:12 - \'Ember\' is not defined. (no-undef)\n4:12 - Use import { inject } from \'@ember/service\'; instead of using Ember.inject.service (ember/new-module-imports)\n5:9 - Use import { inject } from \'@ember/service\'; instead of using Ember.inject.service (ember/new-module-imports)\n5:9 - \'Ember\' is not defined. (no-undef)\n6:20 - Use import { computed } from \'@ember/object\'; instead of using Ember.computed (ember/new-module-imports)\n6:20 - \'Ember\' is not defined. (no-undef)\n9:26 - Use import { computed } from \'@ember/object\'; instead of using Ember.computed (ember/new-module-imports)\n9:26 - \'Ember\' is not defined. (no-undef)\n12:19 - Use import { computed } from \'@ember/object\'; instead of using Ember.computed (ember/new-module-imports)\n12:19 - \'Ember\' is not defined. (no-undef)\n17:5 - Only string, number, symbol, boolean, null, undefined, and function are allowed as default properties (ember/avoid-leaking-state-in-ember-objects)\n19:12 - \'Ember\' is not defined. (no-undef)\n19:12 - Use import { oneWay } from \'@ember/object/computed\'; instead of using Ember.computed.oneWay (ember/new-module-imports)\n20:11 - Use import { oneWay } from \'@ember/object/computed\'; instead of using Ember.computed.oneWay (ember/new-module-imports)\n20:11 - \'Ember\' is not defined. (no-undef)\n21:16 - Use import { computed } from \'@ember/object\'; instead of using Ember.computed (ember/new-module-imports)\n21:16 - \'Ember\' is not defined. (no-undef)\n26:13 - Use import $ from \'jquery\'; instead of using Ember.$ (ember/new-module-imports)\n26:13 - \'Ember\' is not defined. (no-undef)\n51:9 - Do not use global `$` or `jQuery` (ember/no-global-jquery)\n51:9 - \'$\' is not defined. (no-undef)\n52:17 - \'table\' is assigned a value but never used. (no-unused-vars)\n52:25 - \'$\' is not defined. (no-undef)\n52:25 - Do not use global `$` or `jQuery` (ember/no-global-jquery)');
});
